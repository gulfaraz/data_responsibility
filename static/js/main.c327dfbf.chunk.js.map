{"version":3,"sources":["navbar/Navbar.js","need/Need.js","dr/Score.js","dr/Report.js","dr/Badge.js","dr/DR.js","glossary/Glossary.js","feedback/Feedback.js","footer/Footer.js","App.js","index.js"],"names":["Navbar","props","toggle_side_menu","setState","side_menu","state","className","role","aria-label","href","src","alt","width","height","this","aria-expanded","data-target","onClick","aria-hidden","id","to","React","Component","DEBOUNCED_RESIZE","fn","ms","timer","_","clearTimeout","setTimeout","imageMapResize","Need","window","addEventListener","removeEventListener","useMap","name","shape","coords","Score","danger_threshold","success_threshold","score_value","data-tooltip","label","advice","color_class","Report","show_modal","project_name","evaluator_name","project_comments","variable_name","event","update_dict","target","value","toggle_modal","type","placeholder","onChange","update_input_value","create","bind","disabled","doc","setFontSize","text","autoTable","theme","margin","left","startY","columnStyles","0","cellWidth","1","fontStyle","body","timestamp","Date","timestampISOFormat","toISOString","timestampReadableFormat","toLocaleString","calculate_score","questions","x","y","filter","question","answer","no_answer","length","addPage","question_table","map","push","answer_key","top","head","jsPDF","add_title","add_timestamp","add_project_details","add_scores","add_answer_summary","add_questions","save","render_modal","Badge","score","badge_color","badge_url","loader","max","ANSWER_KEY","yes","no","idk","FACT","require","item","metric","component","numerator","weight","reduce","accumulator","current","denominator","Math","round","load_fact_score","fact_score","index","updated_questions","change_answer","Object","entries","answer_value","key","load_question","load_scoreboard","answer_summary","load_questions","Glossary","Feedback","Footer","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c327dfbf.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Navbar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            side_menu: \"\",\n        };\n    }\n\n    toggle_side_menu = () => {\n        this.setState({\n            side_menu: this.state.side_menu ? \"\" : \" is-active\",\n        });\n    };\n\n    render() {\n        return (\n            <nav\n                className=\"navbar\"\n                role=\"navigation\"\n                aria-label=\"main navigation\"\n            >\n                <div className=\"navbar-brand\">\n                    <a className=\"navbar-item\" href=\"https://www.510.global/\">\n                        <img\n                            src=\"510-logo.png\"\n                            alt=\"www.510.global\"\n                            width=\"74\"\n                            height=\"24.75\"\n                        />\n                    </a>\n\n                    <span\n                        role=\"button\"\n                        className={\n                            \"navbar-burger burger\" + this.state.side_menu\n                        }\n                        aria-label=\"menu\"\n                        aria-expanded=\"false\"\n                        data-target=\"side-menu\"\n                        onClick={this.toggle_side_menu}\n                    >\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                    </span>\n                </div>\n\n                <div\n                    id=\"side-menu\"\n                    className={\"navbar-menu\" + this.state.side_menu}\n                >\n                    <div className=\"navbar-start\">\n                        <div className=\"navbar-item has-dropdown is-hoverable\">\n                            <span className=\"navbar-link\">\n                                Data Responsibility\n                            </span>\n\n                            <div className=\"navbar-dropdown\">\n                                <Link className=\"navbar-item\" to=\"/\">\n                                    The Need for Data Responsibility\n                                </Link>\n                                <Link className=\"navbar-item\" to=\"/dr\">\n                                    Calculate D.R. Score\n                                </Link>\n                                <Link className=\"navbar-item\" to=\"/glossary\">\n                                    Glossary\n                                </Link>\n                                <Link className=\"navbar-item\" to=\"/feedback\">\n                                    Feedback\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n","import React from \"react\";\nimport imageMapResize from \"image-map-resizer\";\nimport { Link } from \"react-router-dom\";\n\nconst DEBOUNCED_RESIZE = ((fn, ms) => {\n    let timer;\n    return _ => {\n        clearTimeout(timer);\n        timer = setTimeout(_ => {\n            timer = null;\n            fn();\n        }, ms);\n    };\n})(imageMapResize, 100);\n\nexport default class Need extends React.Component {\n    componentDidMount() {\n        DEBOUNCED_RESIZE();\n        window.addEventListener(\"resize\", DEBOUNCED_RESIZE);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", DEBOUNCED_RESIZE);\n    }\n    render() {\n        return (\n            <div>\n                <section className=\"container has-text-centered\">\n                    <Link\n                        className=\"button is-primary is-outlined is-large is-fullwidth\"\n                        to=\"/dr\"\n                    >\n                        Calculate D.R. Score\n                    </Link>\n                </section>\n                <section className=\"hero\">\n                    <div className=\"hero-body\">\n                        <div className=\"container\">\n                            <h1 className=\"title\">\n                                The Need for Data Responsibility\n                            </h1>\n                        </div>\n                    </div>\n                </section>\n                <div className=\"container\">\n                    <p>\n                        Lorem Ipsum is simply dummy text of the printing and\n                        typesetting industry. Lorem Ipsum has been the\n                        industry's standard dummy text ever since the 1500s,\n                        when an unknown printer took a galley of type and\n                        scrambled it to make a type specimen book. It has\n                        survived not only five centuries, but also the leap into\n                        electronic typesetting, remaining essentially unchanged.\n                        It was popularised in the 1960s with the release of\n                        Letraset sheets containing Lorem Ipsum passages, and\n                        more recently with desktop publishing software like\n                        Aldus PageMaker including versions of Lorem Ipsum.\n                    </p>\n                    <img\n                        className=\"components-image\"\n                        alt=\"Components of an A.I. project - Data, Model and Deploy\"\n                        src=\"components.png\"\n                        useMap=\"#component-image-map\"\n                    />\n                    <map name=\"component-image-map\">\n                        <area\n                            shape=\"rect\"\n                            coords=\"100, 70, 458, 430\"\n                            alt=\"Data\"\n                            href=\"#/fact/data\"\n                        />\n                        <area\n                            shape=\"rect\"\n                            coords=\"565, 70, 923, 430\"\n                            alt=\"Model\"\n                            href=\"#/fact/model\"\n                        />\n                        <area\n                            shape=\"rect\"\n                            coords=\"1030, 70, 1388, 430\"\n                            alt=\"Deploy\"\n                            href=\"#/fact/deploy\"\n                        />\n                    </map>\n                    <p>\n                        Lorem Ipsum is simply dummy text of the printing and\n                        typesetting industry. Lorem Ipsum has been the\n                        industry's standard dummy text ever since the 1500s,\n                        when an unknown printer took a galley of type and\n                        scrambled it to make a type specimen book. It has\n                        survived not only five centuries, but also the leap into\n                        electronic typesetting, remaining essentially unchanged.\n                        It was popularised in the 1960s with the release of\n                        Letraset sheets containing Lorem Ipsum passages, and\n                        more recently with desktop publishing software like\n                        Aldus PageMaker including versions of Lorem Ipsum.\n                    </p>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nconst DEFAULT_DANGER_THRESHOLD = 30;\nconst DEFAULT_SUCCESS_THRESHOLD = 70;\n\nexport default class Score extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            danger_threshold:\n                this.props.danger_threshold || DEFAULT_DANGER_THRESHOLD,\n            success_threshold:\n                this.props.success_threshold || DEFAULT_SUCCESS_THRESHOLD,\n        };\n    }\n\n    color_class() {\n        return this.props.score_value < this.state.danger_threshold ||\n            this.props.score_value === \"<30\"\n            ? \"has-background-danger\"\n            : this.props.score_value > this.state.success_threshold ||\n              this.props.score_value === \">70\"\n            ? \"has-background-success\"\n            : \"has-background-warning\";\n    }\n\n    advice() {\n        return this.props.score_value < this.state.danger_threshold ||\n            this.props.score_value === \"<30\"\n            ? \"Keep going\"\n            : this.props.score_value > this.state.success_threshold ||\n              this.props.score_value === \">70\"\n            ? \"Doing great!\"\n            : \"Getting there\";\n    }\n\n    render() {\n        return (\n            <div className=\"level-item has-text-centered\">\n                <div\n                    className=\"has-tooltip-bottom\"\n                    data-tooltip={\n                        this.props.label === \"legend\"\n                            ? \"What do the colours mean?\"\n                            : this.advice()\n                    }\n                >\n                    {this.props.label ? (\n                        this.props.label === \"legend\" ? (\n                            <p className=\"heading round-score-heading has-text-white\">\n                                {this.advice()}\n                            </p>\n                        ) : (\n                            <p className=\"heading round-score-heading has-text-white\">\n                                {this.props.label}\n                            </p>\n                        )\n                    ) : (\n                        <p className=\"heading round-score-heading has-text-white\">\n                            Overall\n                        </p>\n                    )}\n                    <p\n                        className={\n                            \"round-score title has-text-white \" +\n                            this.color_class()\n                        }\n                    >\n                        {this.props.score_value}%\n                    </p>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nimport * as jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\nconst TITLE_FONT_SIZE = 36;\nconst HEADER_FONT_SIZE = 24;\nconst TIMESTAMP_FONT_SIZE = 11;\nconst TEXT_FONT_SIZE = 14;\n\nexport default class Report extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show_modal: false,\n            project_name: \"\",\n            evaluator_name: \"\",\n            project_comments: \"\",\n        };\n    }\n\n    toggle_modal(show_modal) {\n        this.setState({\n            show_modal: show_modal,\n        });\n    }\n\n    update_input_value(variable_name) {\n        return event => {\n            let update_dict = {};\n            update_dict[variable_name] = event.target.value;\n            this.setState(update_dict);\n        };\n    }\n\n    render_modal() {\n        return (\n            <div\n                className={\n                    \"modal\" + (this.state.show_modal ? \" is-active\" : \"\")\n                }\n            >\n                <div className=\"modal-background\"></div>\n                <div className=\"modal-card\">\n                    <header className=\"modal-card-head\">\n                        <p className=\"modal-card-title\">\n                            Export Responsibility Report\n                        </p>\n                        <button\n                            className=\"delete\"\n                            aria-label=\"close\"\n                            onClick={() => this.toggle_modal(false)}\n                        ></button>\n                    </header>\n                    <section className=\"modal-card-body\">\n                        <div className=\"field\">\n                            <label className=\"label\">\n                                Project Name\n                                <span className=\"has-text-danger\"> *</span>\n                            </label>\n                            <div className=\"control\">\n                                <input\n                                    className=\"input\"\n                                    type=\"text\"\n                                    placeholder=\"e.g Alpha Go\"\n                                    value={this.state.project_name}\n                                    onChange={this.update_input_value(\n                                        \"project_name\"\n                                    )}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"field\">\n                            <label className=\"label\">\n                                Evaluator Name\n                                <span className=\"has-text-danger\"> *</span>\n                            </label>\n                            <div className=\"control\">\n                                <input\n                                    className=\"input\"\n                                    type=\"text\"\n                                    placeholder=\"e.g. Lee Sedol\"\n                                    value={this.state.evaluator_name}\n                                    onChange={this.update_input_value(\n                                        \"evaluator_name\"\n                                    )}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"field\">\n                            <label className=\"label\">Comments</label>\n                            <div className=\"control\">\n                                <textarea\n                                    className=\"textarea has-fixed-size\"\n                                    placeholder=\"e.g. AlphaGo is a computer program that plays the board game Go.\"\n                                    value={this.state.project_comments}\n                                    onChange={this.update_input_value(\n                                        \"project_comments\"\n                                    )}\n                                ></textarea>\n                            </div>\n                            <p className=\"help\">\n                                <span className=\"has-text-danger\">*</span>{\" \"}\n                                indicates required fields\n                            </p>\n                        </div>\n                    </section>\n                    <footer className=\"modal-card-foot\">\n                        <button\n                            className=\"button is-primary\"\n                            onClick={this.create.bind(this)}\n                            disabled={\n                                !this.state.project_name ||\n                                !this.state.evaluator_name\n                            }\n                        >\n                            <span className=\"icon is-medium has-text-white\">\n                                <i className=\"fas fa-file-download\"></i>\n                            </span>\n                            <span>Download</span>\n                        </button>\n                        <button\n                            className=\"button\"\n                            onClick={() => this.toggle_modal(false)}\n                        >\n                            Cancel\n                        </button>\n                    </footer>\n                </div>\n            </div>\n        );\n    }\n\n    add_title(doc) {\n        doc.setFontSize(TITLE_FONT_SIZE);\n        doc.text(\"Data Responsibility Report\", 15, 25);\n    }\n\n    add_project_details(doc) {\n        doc.setFontSize(TEXT_FONT_SIZE);\n\n        doc.autoTable({\n            theme: \"grid\",\n            margin: { left: 15 },\n            startY: 50,\n            columnStyles: {\n                0: {\n                    cellWidth: 30,\n                },\n                1: {\n                    fontStyle: \"bold\",\n                },\n            },\n            body: [\n                [\"Project Name\", this.state.project_name],\n                [\"Evaluator Name\", this.state.evaluator_name],\n                [\"Comments\", this.state.project_comments],\n            ],\n        });\n    }\n\n    add_timestamp(doc) {\n        const timestamp = new Date();\n        const timestampISOFormat = timestamp.toISOString();\n        const timestampReadableFormat = timestamp.toLocaleString(\"en-GB\");\n        doc.setFontSize(TIMESTAMP_FONT_SIZE);\n        doc.text(\"Created on: \" + timestampReadableFormat, 17, 35);\n        return timestampISOFormat;\n    }\n\n    add_scores(doc) {\n        doc.setFontSize(HEADER_FONT_SIZE);\n        doc.text(\n            \"D.R. Score: \" +\n                this.props.calculate_score(null, null, this.props.questions) +\n                \"%\",\n            17,\n            95\n        );\n\n        // doc.text(\"Metrics,\", 15, 120);\n    }\n\n    add_answer_summary(doc, x, y) {\n        doc.setFontSize(TEXT_FONT_SIZE);\n        doc.text(\n            \"Answered \" +\n                this.props.questions.filter(\n                    question => question.answer !== this.props.no_answer\n                ).length +\n                \" of \" +\n                this.props.questions.length +\n                \" questions.\",\n            x,\n            y\n        );\n    }\n\n    add_questions(doc, questions) {\n        doc.addPage();\n        doc.setFontSize(HEADER_FONT_SIZE);\n        doc.text(\"Questions\", 15, 20);\n        doc.setFontSize(TEXT_FONT_SIZE);\n        let question_table = [];\n        questions.map(question => {\n            question_table.push([\n                question.question,\n                this.props.answer_key[question.answer],\n            ]);\n            return question;\n        });\n        const question_table_headers = [[\"Question\", \"Answer\"]];\n        doc.autoTable({\n            margin: { top: 35, left: 15 },\n            head: question_table_headers,\n            body: question_table,\n        });\n    }\n\n    create() {\n        const doc = new jsPDF();\n        this.add_title(doc);\n        const timestamp = this.add_timestamp(doc);\n        this.add_project_details(doc);\n        this.add_scores(doc);\n        this.add_answer_summary(doc, 17, 120);\n        this.add_questions(doc, this.props.questions);\n        doc.save(\"Responsible-AI-Report-\" + timestamp + \".pdf\");\n        this.toggle_modal(false);\n    }\n\n    render() {\n        return (\n            <div className=\"level-item download-report-interaction\">\n                <div\n                    className=\"has-text-centered round-interaction\"\n                    onClick={() => this.toggle_modal(true)}\n                >\n                    <div>\n                        <p className=\"heading\">Download</p>\n                        <p className=\"title\">\n                            <span className=\"icon\">\n                                <i className=\"fas fa-file-download\"></i>\n                            </span>\n                        </p>\n                    </div>\n                </div>\n\n                {this.render_modal()}\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport Img from \"react-image\";\nimport Score from \"./Score\";\n\nexport default class Badge extends React.Component {\n    render() {\n        const score = new Score({ score_value: this.props.score });\n        const badge_color =\n            this.props.score > score.state.danger_threshold\n                ? this.props.score > score.state.success_threshold\n                    ? \"92d050\"\n                    : \"ffc000\"\n                : \"de656b\";\n        const badge_url =\n            \"https://img.shields.io/badge/D.R.-\" +\n            this.props.score +\n            \"-\" +\n            badge_color +\n            \".svg?style=flat-square\";\n        return (\n            <div className=\"level-item has-text-centered badge-interaction\">\n                <a\n                    className=\"has-text-black round-interaction\"\n                    href={badge_url}\n                >\n                    <p className=\"heading\">Badge</p>\n                    <p className=\"title\">\n                        <Img\n                            src={badge_url}\n                            alt={\"D.R.: \" + this.props.score}\n                            loader={\n                                <progress\n                                    className=\"progress is-small is-primary\"\n                                    max=\"100\"\n                                >\n                                    15%\n                                </progress>\n                            }\n                        />\n                    </p>\n                </a>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport Score from \"./Score\";\nimport Report from \"./Report\";\nimport Badge from \"./Badge\";\n\nconst DEFAULT_ANSWER = \"idk\";\nconst NO_ANSWER = \"idk\";\n\nconst ANSWER_KEY = {\n    yes: \"Yes\",\n    no: \"No\",\n    idk: \"I don't know\",\n};\n\nexport default class FACT extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            questions: [],\n        };\n    }\n\n    componentDidMount() {\n        this.setState({\n            questions: require(\"../rubric.json\").questions.map(item => {\n                item.answer = DEFAULT_ANSWER;\n                return item;\n            }),\n        });\n    }\n\n    calculate_score(metric, component, questions = this.state.questions) {\n        let numerator = questions\n            .map(question => {\n                const answer_weight = question.answer === \"yes\";\n                return answer_weight * question.weight;\n            })\n            .reduce((accumulator, current) => accumulator + current, 0);\n        let denominator = questions\n            .map(question => {\n                return Math.max(0, question.weight);\n            })\n            .reduce((accumulator, current) => accumulator + current, 0);\n        return Math.max(0, Math.round(100 * (numerator / denominator)));\n    }\n\n    load_scoreboard() {\n        return <div>{this.load_fact_score()}</div>;\n    }\n\n    load_fact_score() {\n        const fact_score = this.calculate_score();\n        return (\n            <nav className=\"level\">\n                <div className=\"level-item has-text-centered\">\n                    <div>\n                        <p className=\"title\">D.R. Score</p>\n                    </div>\n                </div>\n                <div className=\"level-item\"></div>\n                <div className=\"level-item\"></div>\n                <div className=\"level-item\"></div>\n                <div className=\"level-item\"></div>\n                <div className=\"level-item\"></div>\n                <Score score_value={fact_score} />\n                <div className=\"level-item\"></div>\n                <div className=\"level-item\"></div>\n                <div className=\"level-item\"></div>\n                <Report\n                    answer_key={ANSWER_KEY}\n                    calculate_score={this.calculate_score}\n                    questions={this.state.questions}\n                    no_answer={NO_ANSWER}\n                />\n                <Badge score={fact_score} />\n            </nav>\n        );\n    }\n\n    change_answer(index) {\n        return event => {\n            let updated_questions = this.state.questions;\n            updated_questions[index].answer = event.target.value;\n            this.setState({\n                questions: updated_questions,\n            });\n        };\n    }\n\n    load_question(item, index) {\n        return (\n            <div className=\"field is-horizontal\">\n                <div className=\"field-label is-size-4\">{item.question}</div>\n                <div className=\"field-body\">\n                    <div className=\"select\">\n                        <select\n                            value={item.answer}\n                            onChange={this.change_answer(index)}\n                        >\n                            {Object.entries(ANSWER_KEY).map(\n                                ([answer_key, answer_value]) => {\n                                    return (\n                                        <option\n                                            value={answer_key}\n                                            key={answer_key}\n                                        >\n                                            {answer_value}\n                                        </option>\n                                    );\n                                }\n                            )}\n                        </select>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    load_questions() {\n        return this.state.questions.map((item, index) => {\n            return <div key={index}>{this.load_question(item, index)}</div>;\n        });\n    }\n\n    answer_summary() {\n        return (\n            <div className=\"field is-horizontal is-size-4\">\n                <div className=\"field-label\"># Answered</div>\n                <div className=\"field-body\">\n                    {\n                        this.state.questions.filter(\n                            question => question.answer !== NO_ANSWER\n                        ).length\n                    }\n                    /{this.state.questions.length}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <section className=\"hero\">\n                    <div className=\"hero-body\">\n                        <div className=\"container\">\n                            <nav className=\"level\">\n                                <div className=\"level-item\">\n                                    <div>\n                                        <h1 className=\"title\">\n                                            Calculate D.R. Score\n                                        </h1>\n                                        <br />\n                                        <h1 className=\"subtitle\">\n                                            Your score reflects your data\n                                            responsibility.\n                                        </h1>\n                                    </div>\n                                </div>\n                                <Score label=\"legend\" score_value=\">70\" />\n                                <Score label=\"legend\" score_value=\"30-70\" />\n                                <Score label=\"legend\" score_value=\"<30\" />\n                            </nav>\n                        </div>\n                    </div>\n                </section>\n                <div className=\"container\">\n                    {this.load_scoreboard()}\n                    {this.answer_summary()}\n                    {this.load_questions()}\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nexport default class Glossary extends React.Component {\n    render() {\n        return (\n            <div>\n                <section className=\"hero\">\n                    <div className=\"hero-body\">\n                        <div className=\"container\">\n                            <h1 className=\"title\">Glossary</h1>\n                            <h1 className=\"subtitle\">\n                                Definitions of terms, phrases and abbreviations\n                                used in our questions.\n                            </h1>\n                        </div>\n                    </div>\n                </section>\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th className=\"term-column-header\">TERM</th>\n                                <th>DEFINITION</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>COCO</td>\n                                <td>\n                                    <a href=\"http://cocodataset.org/\">\n                                        Common Objects in Context\n                                    </a>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Fairness</td>\n                                <td>\n                                    Decisions are unbiased to identity features\n                                    such as gender, race, nationality, sexual\n                                    orientation, religion, political opinion,\n                                    skin colour, education, address and age.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Accountability</td>\n                                <td>\n                                    Decisions should be traceable, reproducible\n                                    and liable. All decisions and their\n                                    consequences must be owned and explained by\n                                    the decision maker or administrator of the\n                                    decision maker.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Confidentiality</td>\n                                <td>\n                                    Personal information which can be used to\n                                    identify individuals or communities must be\n                                    secure and above intentional or accidental\n                                    misuse.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Transparency</td>\n                                <td>\n                                    Understanding why a decision is made is key\n                                    to establishing trust in the decision\n                                    process. Accompanying decisions with\n                                    explanations and analysis reports help\n                                    understand the outcome.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Data</td>\n                                <td>\n                                    Refers to interpretable information in the\n                                    context of the world. Data can be in the\n                                    form of text, numbers, images, audio, video,\n                                    co-ordinates, address, email, phone numbers,\n                                    names, machine logs, journals, sensor\n                                    readings, etc. In our context, data\n                                    encapsulates all text/media/documents\n                                    related to the project and not limited to\n                                    only datasets used for modelling and\n                                    analyses.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Model</td>\n                                <td>\n                                    Refers to a function or process which uses\n                                    data to draw inferences about the world.\n                                    Models can be statistical, symbolic,\n                                    mathematical, deterministic, stochastic,\n                                    neural networks, flow charts, black-box,\n                                    white-box, decision trees, etc. In our\n                                    context, model represents the world in which\n                                    the decisions are effective and the\n                                    consequences of the decisions have\n                                    repercussions.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Deploy(ment)</td>\n                                <td>\n                                    Refers to a system which uses the model to\n                                    make inferences on unseen events of the\n                                    world. A deployment can be a script, a\n                                    function in a program, an excel sheet, a web\n                                    application, a decision making system, a\n                                    toolkit, a library package, a form, a\n                                    program, an application, a mobile app, a\n                                    feature in a mobile app, etc. In our\n                                    context, a deployment is an implementation\n                                    of the model which is used to make\n                                    inferences on unseen data. An implementation\n                                    can refer to both online and offline use of\n                                    the model.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Feature Imbalance</td>\n                                <td>\n                                    When a subset of features in the dataset\n                                    contain most of the useful information to\n                                    represent the datapoint. Also applies to\n                                    range of the feature values.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Class Imbalance</td>\n                                <td>\n                                    When a subset of the classes are represented\n                                    by most of the datapoints in the dataset.\n                                    Ideally, the training set should\n                                    sufficiently represent the test set.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Hyper-parameter</td>\n                                <td>\n                                    A parameter that is set before the learning\n                                    process begins. It affects the performance\n                                    of the model.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Optimal Hyper-parameter</td>\n                                <td>\n                                    A hyper-parameter value which achieves the\n                                    model’s best performance is said to be\n                                    optimal.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Active Learning</td>\n                                <td>\n                                    A special case of machine learning in which\n                                    a learning algorithm is able to\n                                    interactively query the user to obtain the\n                                    desired outputs at new data points.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Decision Workflow</td>\n                                <td>\n                                    A subset of the process which only contains\n                                    decision nodes. Applies only to non-trivial\n                                    system where an instance of the process does\n                                    not explore the whole system.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Dataset</td>\n                                <td>\n                                    A set of datapoints which serve as input and\n                                    labels to a prediction model. The dataset\n                                    includes all datapoints with and without\n                                    corresponding labels. Only the datapoints\n                                    with labels can be used in the training,\n                                    validation and test sets.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Training Set</td>\n                                <td>\n                                    A subset of the dataset used to teach the\n                                    model about the data. Usually, 80% of the\n                                    labelled dataset.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Validation Set</td>\n                                <td>\n                                    A subset of the dataset used to tune the\n                                    model with respect to the data. Usually, 10%\n                                    of the labelled dataset.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Test Set</td>\n                                <td>\n                                    A subset of the dataset used to evaluate the\n                                    model on the data. Usually, 10% of the\n                                    labelled dataset.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Inference Set</td>\n                                <td>\n                                    All datapoints which are not in the\n                                    training, validation, test sets. These\n                                    datapoints can be with and without\n                                    corresponding labels.\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nexport default class Feedback extends React.Component {\n    render() {\n        return (\n            <section className=\"hero\">\n                <div className=\"hero-body\">\n                    <div className=\"container\">\n                        <h1 className=\"title\">\n                            <a href=\"mailto:grahman@rodekruis.nl?subject=Responsible A.I.\">\n                                Email\n                            </a>{\" \"}\n                            us your feedback.\n                        </h1>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n","import React from \"react\";\n\nexport default class Footer extends React.Component {\n    render() {\n        return (\n            <footer className=\"footer\">\n                <div className=\"content has-text-centered\">\n                    <p>\n                        <strong>Data Responsibility</strong> by{\" \"}\n                        <a href=\"https://www.510.global/\">510.global</a> under\n                        the{\" \"}\n                        <a href=\"https://github.com/gulfaraz/dr_score/blob/master/LICENSE\">\n                            GPL-3.0 license\n                        </a>\n                        .\n                    </p>\n                </div>\n            </footer>\n        );\n    }\n}\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./navbar/Navbar\";\nimport Need from \"./need/Need\";\nimport DR from \"./dr/DR\";\nimport Glossary from \"./glossary/Glossary\";\nimport Feedback from \"./feedback/Feedback\";\nimport Footer from \"./footer/Footer\";\nimport \"./app.scss\";\n\nexport default class App extends React.Component {\n    render() {\n        return (\n            <div className=\"dr-score\">\n                <Router>\n                    <div className=\"router-content\">\n                        <Navbar />\n                        <Switch>\n                            <Route path=\"/dr\">\n                                <DR />\n                            </Route>\n                            <Route path=\"/glossary\">\n                                <Glossary />\n                            </Route>\n                            <Route path=\"/feedback\">\n                                <Feedback />\n                            </Route>\n                            <Route exact path=\"/\">\n                                <Need />\n                            </Route>\n                        </Switch>\n                    </div>\n                </Router>\n                <Footer />\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}